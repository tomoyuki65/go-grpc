syntax = "proto3";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

package sample;

option go_package="pb/sample";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  swagger: "2.0"
  info: {
    title: "gRPC-Gateway"
    description: "gRPC-GatewayのOpenAPI仕様書"
    version: "1.0"
  }
  host: "localhost:8080"
  schemes: HTTP
  security_definitions: {
    security: {
      key: "BearerAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Enter the token with the `Bearer ` prefix, e.g., `Bearer abcde12345`"
      }
    }
  }
};

// 空のリクエストパラメータ
message Empty {}

// Helloメソッドのレスポンス結果
message HelloResponseBody {
  // メッセージ
  string message = 1;
}

// HelloAddTextメソッドのリクエストパラメータ
message HelloAddTextRequestBody {
  // テキスト
  string text = 1 [(validate.rules).string.min_len = 1];
}

// HelloAddTextメソッドのレスポンス結果
message HelloAddTextResponseBody {
  // メッセージ
  string message = 1;
}

// HelloServerStreamメソッドのリクエストパラメータ
message HelloServerStreamRequestBody {
  // テキスト
  string text = 1 [(validate.rules).string.min_len = 1];
}

// HelloServerStreamメソッドのレスポンス結果
message HelloServerStreamResponseBody {
  // メッセージ
  string message = 1;
}

// HelloClientStreamメソッドのリクエストパラメータ
message HelloClientStreamRequestBody {
  // テキスト
  string text = 1 [(validate.rules).string.min_len = 1];
}

// HelloClientStreamメソッドのレスポンス結果
message HelloClientStreamResponseBody {
  // メッセージ
  string message = 1;
}

// HelloBidirectionalStreamメソッドのリクエストパラメータ
message HelloBidirectionalStreamRequestBody {
  // テキスト
  string text = 1 [(validate.rules).string.min_len = 1];
}

// HelloBidirectionalStreamメソッドのレスポンス結果
message HelloBidirectionalStreamResponseBody {
  // メッセージ
  string message = 1;
}

// エラーレスポンス
message ErrResponse {
  // メッセージ
  string message = 1;
}

// サンプルサービス
service SampleService {
  // 「Hello World !!」を出力
  rpc Hello(Empty) returns (HelloResponseBody) {}
    // Returns:
    //   - 0 OK: HelloResponseBodyを出力
    //   - 2 Unknown: 不明なエラー

  // 「Hello {リクエストパラメータのtext}」を出力
  rpc HelloAddText(HelloAddTextRequestBody) returns (HelloAddTextResponseBody) {}
    // Returns:  
    //   - 0 OK: HelloAddTextResponseBodyを出力  
    //   - 2 Unknown: 不明なエラー  
    //   - 3 INVALID_ARGUMENT: バリデーションエラー  

  // サーバーストリーミング（1リクエスト-複数のレスポンス）
  rpc HelloServerStream(HelloServerStreamRequestBody) returns (stream HelloServerStreamResponseBody) {}
    // Returns:
    //   - 0 OK: HelloServerStreamResponseBodyを出力（複数回）
    //   - 2 Unknown: 不明なエラー
    //   - 3 INVALID_ARGUMENT: バリデーションエラー

  // クライアントストリーミング（複数のリクエスト-1レスポンス）
  rpc HelloClientStream(stream HelloClientStreamRequestBody) returns (HelloClientStreamResponseBody) {}
    // Returns:
    //   - 0 OK: HelloClientStreamResponseBodyを出力
    //   - 2 Unknown: 不明なエラー
    //   - 3 INVALID_ARGUMENT: バリデーションエラー）

  // 双方向ストリーミング（複数のリクエスト-複数のレスポンス）
  rpc HelloBidirectionalStream(stream HelloBidirectionalStreamRequestBody) returns (stream HelloBidirectionalStreamResponseBody) {}
    // Returns:
    //   - 0 OK: HelloClientStreamResponseBodyを出力
    //   - 2 Unknown: 不明なエラー
    //   - 3 INVALID_ARGUMENT: バリデーションエラー）

  // gRPC-Gateway（GETメソッド）
  rpc HelloApi(Empty) returns (HelloResponseBody){
    option (google.api.http) = {
      get: "/api/v1/hello"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "500"
        value: {
          description: "Internal Server Error"
          schema: {
            json_schema: {
              ref: ".sample.ErrResponse"
            }
          }
          examples: {
            key: "application/json"
            value: "{\"message\": \"Internal Server Error\"}"
          }
        }
      }
    };
  }

  // gRPC-Gateway（POSTメソッド）
  rpc HelloAddTextApi(HelloAddTextRequestBody) returns (HelloAddTextResponseBody){
    option (google.api.http) = {
      post: "/api/v1/hello"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {
          description: "Bad Request"
          schema: {
            json_schema: {
              ref: ".sample.ErrResponse"
            }
          }
          examples: {
            key: "application/json"
            value: "{\"message\": \"Bad Request\"}"
          }
        }
      }
      responses: {
        key: "401"
        value: {
          description: "Unauthorized"
          schema: {
            json_schema: {
              ref: ".sample.ErrResponse"
            }
          }
          examples: {
            key: "application/json"
            value: "{\"message\": \"Unauthorized\"}"
          }
        }
      }
      responses: {
        key: "500"
        value: {
          description: "Internal Server Error"
          schema: {
            json_schema: {
              ref: ".sample.ErrResponse"
            }
          }
          examples: {
            key: "application/json"
            value: "{\"message\": \"Internal Server Error\"}"
          }
        }
      }
      security: {
        security_requirement: {
          key: "BearerAuth"
          value: {}
        }
      }
    };
  }
}
